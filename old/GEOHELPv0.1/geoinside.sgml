<!doctype s-function-doc system "s-function-doc.dtd" [
<!entity % S-OLD "INCLUDE">
]
>
<s-function-doc>
<s-topics>
<s-topic> geoinside </s-topic>
</s-topics>
<s-title>
Finds a subset of a given set of data which  is  inside  a  given
region.
</s-title>
<s-description>
 Finds a subset of a given set of data which is  inside  or
       outside  a  given  region and returns a submatrix of those
       values, boolean vector of indexes or index vector.
</s-description>
<s-usage>
<s-old-style-usage>
geoinside(data, reg, option=1, col.names=c("lat", "lon"), na.rm=T, robust=F)
</s-old-style-usage>
</s-usage>
<s-args-required>
<s-arg name="data">
a dataframe, should include vectors $lat and $lon,  but
       will except other names, see col.names.
</s-arg>
<s-arg name="reg">
The region we want to determine whether the data is inside
       of, should include vectors with same names as data.
</s-arg>
</s-args-required>
<s-args-optional>
<s-arg name="option">
 Allows you to determine on what format you recieve  the
       output:  
<s-example>
        option = 1: returns the submatrix of data which
                    is inside reg.
        option = 2: returns the submatrix of  data
                    which  is  outside  reg.
        option = 3: returns a boolean vector saying whether a
                    given index is inside reg.
        option = 4: returns a boolean vector saying whether a
                    give index is outside reg.
        option = 5: returns a vector  of  indexes to data,
                    data[return[i],] is the i-th point in data
                    inside reg. 
        option = 6: returns a vector  of  indexes  to  data,
                    data[return[i],] is the i-th point in data
                    outside reg.
</s-example>     
</s-arg>
<s-arg name="col.names">
Default col.names = c("lat","lon"), determines the
       names  of  the  base  vectors of the space we are viewing.
       May be replaced by for instance col.names = c("x","y")
</s-arg>
<s-arg name="na.rm">
If true values where $lat or $lon are NA  are  removed.
       Default is false.
</s-arg>
<s-arg name="robust">
If true a robust search is done, if false the  function
       runs faster.  Default is true. Robust = T will not work if
       the  regions  edges  overlap  each  other,  if  region  is
       sensibly defined this will not happen and robust =F should
       be used.
</s-arg>
</s-args-optional>
<s-value>
Returns and output vector or matrix, see option.
</s-value>
<s-side-effects>
None.
</s-side-effects>
<s-see>
<s-function name="geoplot.sgm">geoplot</s-function>,
<s-function name="geolocator.sgm">geolocator</s-function>.
</s-see>
<s-examples>
<s-example>

   seafishing <- geoinside(fishing,island,option=2)  
   # Removes those datapoints from fishing where fishing took
   # place inside Iceland (misspells).

   grd <- list(lat=c(64,64,63,63),lon=c(-23,-22,-22,-23))
   ins.lat.64.63.lon.23.22 <- geoinside(fishing,grd,robust =T)  
   # Extracts those points from fishing where fishing
   # took place inside the given box.


      
   #######################################################
   # Example                                             # 
   #######################################################

   par(mfrow=c(2,1))
   stations<-data.frame(lat=stodvar$lat,lon=stodvar$lon)
   stations<-stations[!is.na(stations$lon),]            
   stations<-stations[!is.na(stations$lat),]

   geoplot(grid=F)
   geopoints(stations,pch=".",col=25)
   title(main="Before geoinside")

   sea.stations <- geoinside(stations,island,option=2)
   # Removes those datapoints from stations where
   # measurments took place inside Iceland (misspells).        
 
   geoplot(grid=F) 
   geopoints(sea.stations,pch=".",col=25)       
   title(main="After geoinside")

   #######################################################
  

</s-example>
</s-examples>
<s-docclass>
function
</s-docclass>
</s-function-doc>
