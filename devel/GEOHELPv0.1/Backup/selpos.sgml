<!doctype s-function-doc system "s-function-doc.dtd" [
<!entity % S-OLD "INCLUDE">
]
>
<s-function-doc>
<s-topics>
<s-topic> selpos </s-topic>
</s-topics>
<s-title>
Geographical point selection.
</s-title>
<s-description>
Select geographical data points by arbitrary criterion.
</s-description>
<s-usage>
<s-old-style-usage>
selpos(lat, lon=NULL, ind)
</s-old-style-usage>
</s-usage>
<s-args-required>
<s-arg name="lat">
Latitude of points or list containing lat,lon.
</s-arg>
<s-arg name="ind">
Selection criterion.
</s-arg>
</s-args-required>
<s-args-optional>
<s-arg name="lon">
Longitude of data points. If missing, this must be
               part of the lat argument.
</s-arg>
</s-args-optional>
<s-value>
Returns list  with  elements  lat,lon  which  satisfy  the
       criterion.
</s-value>
<s-details>
The normal way of working with  geographical  data  is  to
       store  positions as a list with names lat and lon. This is
       easier for most applications, except selection of subsets,
       where  it  is essential to access individual elements. The
       purpose of this routine is merely to  ease  the  selection
       process.
</s-details>
<s-see>
<s-function name="geoplot.sgm">geoplot</s-function>,
<s-function name="selreg.sgm">selreg</s-function>.
</s-see>
<s-examples>
<s-example>

             subs<-selpos(pos,,z>6)# Select positions where z>6

       The Function is trivially defined as
       function(lat, lon = NULL, ind)
       {
                      if(is.null(lon)) {
                           lon <- lat$lon
                           lat <- lat$lat
                      }
                      lat <- lat[ind]
                      lon <- lon[ind]
                      return(lat, lon)
       }
</s-example>
</s-examples>
<s-docclass>
function
</s-docclass>
</s-function-doc>
